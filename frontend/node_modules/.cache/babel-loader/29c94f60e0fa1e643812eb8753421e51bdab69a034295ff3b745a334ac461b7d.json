{"ast":null,"code":"var _jsxFileName = \"C:\\\\agriculture-drone-gcs\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('access_token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const tokenData = await authAPI.login(credentials);\n      localStorage.setItem('access_token', tokenData.access_token);\n\n      // Get user profile\n      const userData = await authAPI.getProfile();\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const newUser = await authAPI.register(userData);\n\n      // Auto-login after registration\n      await login({\n        username: userData.username,\n        password: userData.password\n      });\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    isLoading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","credentials","tokenData","setItem","access_token","userData","getProfile","stringify","register","newUser","username","password","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/agriculture-drone-gcs/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { User, LoginCredentials, RegisterData } from '../types';\r\nimport { authAPI } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  register: (userData: RegisterData) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('access_token');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    if (token && storedUser) {\r\n      try {\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    try {\r\n      const tokenData = await authAPI.login(credentials);\r\n      localStorage.setItem('access_token', tokenData.access_token);\r\n\r\n      // Get user profile\r\n      const userData = await authAPI.getProfile();\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    try {\r\n      const newUser = await authAPI.register(userData);\r\n      \r\n      // Auto-login after registration\r\n      await login({\r\n        username: userData.username,\r\n        password: userData.password,\r\n      });\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}